; mutable: g$x
; mutable: loop
; env: ()
; env: ()
; env: ()
; env: ()
; env: ()
; env: ()
; env: ()
; env: ()
; env: ()
; env: ()
; env: ()
; global: g$x
; env: ()
; env*: (rv14)
; env: (rv14)
; env: (rv14)
; env*: (f rv14 cc)
; env: (f rv14 cc)
; env: (f rv14 cc)
; regular: f
; env: (f rv14 cc)
; env*: (f k rv14 cc x)
; env: (f k rv14 cc x)
; env: (f k rv14 cc x)
; regular: cc
; env: (f k rv14 cc x)
; regular: x
; env: (f rv14 cc)
; regular: cc
; env: (rv14)
; env*: (rv14 k15 break)
; env: (rv14 k15 break)
; env: (rv14 k15 break)
; env*: (loop rv14 k16 k15 break)
; env: (loop rv14 k16 k15 break)
; env: (loop rv14 k16 k15 break)
; env*: (loop rv14 k16 k15 break k17)
; env: (loop rv14 k16 k15 break k17)
; env: (loop rv14 k16 k15 break k17)
; env: (loop rv14 k16 k15 break k17)
; env: (loop rv14 k16 k15 break k17)
; global: g$x
; env: (loop rv14 k16 k15 break k17)
; env: (loop rv14 k16 k15 break k17)
; env*: (loop rv14 k16 k15 break rv18 k17)
; env: (loop rv14 k16 k15 break rv18 k17)
; env: (loop rv14 k16 k15 break rv18 k17)
; regular: rv18
; env: (loop rv14 k16 k15 break rv18 k17)
; env: (loop rv14 k16 k15 break rv18 k17)
; env*: (f cc loop rv14 k16 k15 break rv18 k17)
; env: (f cc loop rv14 k16 k15 break rv18 k17)
; env: (f cc loop rv14 k16 k15 break rv18 k17)
; regular: f
; env: (f cc loop rv14 k16 k15 break rv18 k17)
; env*: (f k cc loop rv14 x k16 k15 break rv18 k17)
; env: (f k cc loop rv14 x k16 k15 break rv18 k17)
; env: (f k cc loop rv14 x k16 k15 break rv18 k17)
; regular: cc
; env: (f k cc loop rv14 x k16 k15 break rv18 k17)
; regular: x
; env: (f cc loop rv14 k16 k15 break rv18 k17)
; regular: cc
; env: (loop rv14 k16 k15 break rv18 k17)
; env*: (loop rv14 k16 k15 break continue k19 rv18 k17)
; env: (loop rv14 k16 k15 break continue k19 rv18 k17)
; env: (loop rv14 k16 k15 break continue k19 rv18 k17)
; env*: (loop rv14 k16 k15 break continue k19 rv18 k17 k20)
; env: (loop rv14 k16 k15 break continue k19 rv18 k17 k20)
; env: (loop rv14 k16 k15 break continue k19 rv18 k17 k20)
; env: (loop rv14 k16 k15 break continue k19 rv18 k17 k20)
; env: (loop rv14 k16 k15 break continue k19 rv18 k17 k20)
; global: g$x
; env: (loop rv14 k16 k15 break continue k19 rv18 k17 k20)
; env*: (loop rv14 k16 k15 break continue k19 rv18 k17 rv21 k20)
; env: (loop rv14 k16 k15 break continue k19 rv18 k17 rv21 k20)
; env: (loop rv14 k16 k15 break continue k19 rv18 k17 rv21 k20)
; env: (loop rv14 k16 k15 break continue k19 rv18 k17 rv21 k20)
; env: (loop rv14 k16 k15 break continue k19 rv18 k17 rv21 k20)
; global: g$x
; env: (loop rv14 k16 k15 break continue k19 rv18 k17 rv21 k20)
; env: (loop rv14 k16 k15 break continue k19 rv18 k17 rv21 k20)
; env*: (loop rv14 k16 k15 break continue k19 rv18 k17 rv22 rv21 k20)
; env: (loop rv14 k16 k15 break continue k19 rv18 k17 rv22 rv21 k20)
; env: (loop rv14 k16 k15 break continue k19 rv18 k17 rv22 rv21 k20)
; regular: rv22
; env: (loop rv14 k16 k15 break continue k19 rv18 k17 rv22 rv21 k20)
; env: (loop rv14 k16 k15 break continue k19 rv18 k17 rv22 rv21 k20)
; env: (loop rv14 k16 k15 break continue k19 rv18 k17 rv22 rv21 k20)
; env: (loop rv14 k16 k15 break continue k19 rv18 k17 rv22 rv21 k20)
; global: g$x
; env: (loop rv14 k16 k15 break continue k19 rv18 k17 rv22 rv21 k20)
; regular: k20
; env: (loop rv14 k16 k15 break continue k19 rv18 k17)
; regular: k19
; env: (loop rv14 k16 k15 break rv18 k17)
; env*: (loop rv14 k16 k15 break rv18 k17 rv23)
; env: (loop rv14 k16 k15 break rv18 k17 rv23)
; env: (loop rv14 k16 k15 break rv18 k17 rv23)
; mutable: loop
; env: (loop rv14 k16 k15 break rv18 k17 rv23)
; regular: k17
; env: (loop rv14 k16 k15 break rv18 k17)
; env: (loop rv14 k16 k15 break rv18 k17)
; regular: k17
; env: (loop rv14 k16 k15 break rv18 k17)
; env: (loop rv14 k16 k15 break)
; env: (loop rv14 k16 k15 break)
; mutable: loop
; env: (loop rv14 k16 k15 break)
; env*: (loop rv14 k16 k15 break rv24)
; env: (loop rv14 k16 k15 break rv24)
; env: (loop rv14 k16 k15 break rv24)
; env*: (loop rv14 k16 k15 break k25 rv24)
; env: (loop rv14 k16 k15 break k25 rv24)
; env: (loop rv14 k16 k15 break k25 rv24)
; env: (loop rv14 k16 k15 break k25 rv24)
; env: (loop rv14 k16 k15 break k25 rv24)
; regular: k25
; env: (loop rv14 k16 k15 break rv24)
; regular: k16
; env: (rv14 k15 break)
; env: (rv14 k15 break)
; regular: k15
; env: (rv14)
; env: (rv14)
; global: $halt
(program
 (define break (void))
 (define return (void))
 (define continue (void))
 (define $current-handler (void))
 (define g$x (void))
 (set-then!
  g$x
  20
  ((cps py-print)
   g$x
   (lambda (rv14)
     ((lambda (f cc) (f (lambda (x k) (cc x)) cc))
      (lambda (break k15)
        ((lambda (loop k16)
           (set-then!
            loop
            (make-cell loop)
            (set-cell!
             loop
             (lambda (k17)
               ((cps >)
                g$x
                0
                (lambda (rv18)
                  (if rv18
                    ((lambda (f cc) (f (lambda (x k) (cc x)) cc))
                     (lambda (continue k19)
                       ((lambda (k20)
                          ((cps py-print)
                           g$x
                           (lambda (rv21)
                             ((cps -)
                              g$x
                              1
                              (lambda (rv22)
                                (set-then!
                                 g$x
                                 rv22
                                 ((cps py-print) g$x k20)))))))
                        k19))
                     (lambda (rv23) ((get-cell loop) k17)))
                    (k17 (void))))))
             ((get-cell loop)
              (lambda (rv24)
                ((lambda (k25) ((cps py-print) "didn't run\n" k25)) k16))))))
         (void)
         k15))
      $halt)))))
