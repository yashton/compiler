; mutable: g$y
; mutable: g$x
; env: ()
; env: ()
; env: ()
; env: ()
; env: ()
; env: ()
; env: ()
; env: ()
; env*: (f cc)
; env: (f cc)
; env: (f cc)
; regular: f
; env: (f cc)
; env*: (f k cc x)
; env: (f k cc x)
; env: (f k cc x)
; regular: cc
; env: (f k cc x)
; regular: x
; env: (f cc)
; regular: cc
; env: ()
; env*: (k14 break)
; env: (k14 break)
; env: (k14 break)
; env*: (break k14 $loop15 $seq14 k15)
; env: (break k14 $loop15 $seq14 k15)
; env: (break k14 $loop15 $seq14 k15)
; env*: (break k14 $loop15 $seq14 k16 k15)
; env: (break k14 $loop15 $seq14 k16 k15)
; env: (break k14 $loop15 $seq14 k16 k15)
; env: (break k14 $loop15 $seq14 k16 k15)
; regular: $seq14
; env: (break k14 $loop15 $seq14 k16 k15)
; env*: (break k14 $loop15 $seq14 rv18 k16 k15)
; env: (break k14 $loop15 $seq14 rv18 k16 k15)
; env: (break k14 $loop15 $seq14 rv18 k16 k15)
; regular: rv18
; env: (break k14 $loop15 $seq14 rv18 k16 k15)
; env: (break k14 $loop15 $seq14 rv18 k16 k15)
; env: (break k14 $loop15 $seq14 rv18 k16 k15)
; global: for-set-k
; env: (break k14 $loop15 $seq14 rv18 k16 k15)
; regular: $seq14
; env: (break k14 $loop15 $seq14 rv18 k16 k15)
; regular: $loop15
; env: (break k14 $loop15 $seq14 rv18 k16 k15)
; regular: k16
; env: (break k14 $loop15 $seq14 rv18 k16 k15)
; env: (break k14 $loop15 $seq14 rv18 k16 k15)
; env: (break k14 $loop15 $seq14 rv18 k16 k15)
; regular: $seq14
; env: (break k14 $loop15 $seq14 rv18 k16 k15)
; env*: (break k14 $loop15 $seq14 rv18 k16 k15 rv19)
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv19)
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv19)
; regular: rv19
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv19)
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv19)
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv19)
; global: for-tuple-k
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv19)
; regular: $seq14
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv19)
; regular: $loop15
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv19)
; regular: k16
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv19)
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv19)
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv19)
; regular: $seq14
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv19)
; env*: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19)
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19)
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19)
; regular: rv20
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19)
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19)
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19)
; global: for-py-list-k
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19)
; regular: $seq14
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19)
; regular: $loop15
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19)
; regular: k16
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19)
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19)
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19)
; regular: $seq14
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19)
; env*: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19 rv21)
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19 rv21)
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19 rv21)
; regular: rv21
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19 rv21)
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19 rv21)
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19 rv21)
; global: for-dict-k
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19 rv21)
; regular: $seq14
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19 rv21)
; regular: $loop15
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19 rv21)
; regular: k16
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19 rv21)
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19 rv21)
; regular: k16
; env: (break k14 $loop15 $seq14 rv18 k16 k15 rv20 rv19 rv21)
; env: (break k14 $loop15 $seq14 k15)
; env*: (break k14 $loop15 $seq14 k15 rv17)
; env: (break k14 $loop15 $seq14 k15 rv17)
; env: (break k14 $loop15 $seq14 k15 rv17)
; regular: k15
; env: (break k14 $loop15 $seq14 k15 rv17)
; env: (k14 break)
; env: (k14 break)
; env: (k14 break)
; env: (k14 break)
; env: (k14 break)
; env*: (break k14 i14 k22)
; env: (break k14 i14 k22)
; env: (break k14 i14 k22)
; env*: (f cc break k14 i14 k22)
; env: (f cc break k14 i14 k22)
; env: (f cc break k14 i14 k22)
; regular: f
; env: (f cc break k14 i14 k22)
; env*: (f k x cc break k14 i14 k22)
; env: (f k x cc break k14 i14 k22)
; env: (f k x cc break k14 i14 k22)
; regular: cc
; env: (f k x cc break k14 i14 k22)
; regular: x
; env: (f cc break k14 i14 k22)
; regular: cc
; env: (break k14 i14 k22)
; env*: (break k14 i14 continue k23 k22)
; env: (break k14 i14 continue k23 k22)
; env: (break k14 i14 continue k23 k22)
; regular: i14
; env: (break k14 i14 continue k23 k22)
; env: (break k14 i14 continue k23 k22)
; env*: (break k14 i14 k24 continue k23 k22)
; env: (break k14 i14 k24 continue k23 k22)
; env: (break k14 i14 k24 continue k23 k22)
; env: (break k14 i14 k24 continue k23 k22)
; env: (break k14 i14 k24 continue k23 k22)
; global: g$x
; env: (break k14 i14 k24 continue k23 k22)
; env*: (break k14 i14 k24 continue k23 k22 rv25)
; env: (break k14 i14 k24 continue k23 k22 rv25)
; env: (break k14 i14 k24 continue k23 k22 rv25)
; env: (break k14 i14 k24 continue k23 k22 rv25)
; env: (break k14 i14 k24 continue k23 k22 rv25)
; global: g$x
; env: (break k14 i14 k24 continue k23 k22 rv25)
; env: (break k14 i14 k24 continue k23 k22 rv25)
; global: g$y
; env: (break k14 i14 k24 continue k23 k22 rv25)
; env*: (break k14 i14 k24 continue k23 k22 rv26 rv25)
; env: (break k14 i14 k24 continue k23 k22 rv26 rv25)
; env: (break k14 i14 k24 continue k23 k22 rv26 rv25)
; regular: rv26
; env: (break k14 i14 k24 continue k23 k22 rv26 rv25)
; env: (break k14 i14 k24 continue k23 k22 rv26 rv25)
; regular: k24
; env: (break k14 i14 k24 continue k23 k22 rv26 rv25)
; env: (break k14 i14 continue k23 k22)
; regular: k23
; env: (break k14 i14 k22)
; regular: k22
; env: (k14 break)
; regular: k14
; env: ()
; env: ()
; global: $halt
(program
 (define break (void))
 (define return (void))
 (define continue (void))
 (define $current-handler (void))
 (define g$y (void))
 (define g$x (void))
 ((lambda (f cc) (f (lambda (x k) (cc x)) cc))
  (lambda (break k14)
    ((lambda ($seq14 $loop15 k15)
       ((lambda (k16)
          ((cps set?)
           $seq14
           (lambda (rv18)
             (if rv18
               (for-set-k $seq14 $loop15 k16)
               ((cps tuple?)
                $seq14
                (lambda (rv19)
                  (if rv19
                    (for-tuple-k $seq14 $loop15 k16)
                    ((cps py-list?)
                     $seq14
                     (lambda (rv20)
                       (if rv20
                         (for-py-list-k $seq14 $loop15 k16)
                         ((cps dict?)
                          $seq14
                          (lambda (rv21)
                            (if rv21
                              (for-dict-k $seq14 $loop15 k16)
                              (k16 (void)))))))))))))))
        (lambda (rv17) (k15 (void)))))
     (py-list* 1 2 3)
     (lambda (i14 k22)
       ((lambda (f cc) (f (lambda (x k) (cc x)) cc))
        (lambda (continue k23)
          (set-then!
           g$x
           i14
           ((lambda (k24)
              ((cps py-print)
               g$x
               (lambda (rv25)
                 ((cps +)
                  g$x
                  g$y
                  (lambda (rv26) (set-then! g$y rv26 (k24 (void))))))))
            k23)))
        k22))
     k14))
  $halt))
